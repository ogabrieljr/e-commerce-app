{"version":3,"sources":["components/collection item/CollectionItem.js","components/preview collection/PreviewCollection.js","redux/shop/shopSelector.js","components/collection overview/CollectionOverview.js","pages/collection/Collection.js","pages/shop page/ShopPage.js"],"names":["connect","dispatch","addItem","item","name","price","imageUrl","className","style","backgroundImage","onClick","inverted","PreviewCollection","title","items","filter","i","map","key","id","getShopCollections","createSelector","state","shopReducer","shop","collections","collectionValues","Object","values","otherProps","props","selectCollection","params","match","collectionid","fetchCollectionsStart","useEffect","Spinner","exact","path","url","component","CollectionOverview","Collection"],"mappings":"2LA2BA,IAIeA,cACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EAzBf,YAA4C,IAAlBG,EAAiB,EAAjBA,KAAMD,EAAW,EAAXA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SACrB,OACE,yBAAKC,UAAU,mBACb,yBACEA,UAAU,QACVC,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAT,QAGnB,yBAAKC,UAAU,qBACb,8BAAOH,GACP,kCAAQC,IAEV,kBAAC,IAAD,CAAQK,QAAS,kBAAMR,EAAQC,IAAOQ,UAAQ,GAA9C,mB,MChBS,SAASC,EAAT,GAA8C,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACjD,OACE,yBAAKP,UAAU,sBACb,wBAAIA,UAAU,SAASM,GACvB,yBAAKN,UAAU,WACZO,EACEC,QAAO,SAACZ,EAAMa,GAAP,OAAaA,EAAI,KACxBC,KAAI,SAAAd,GAAI,OACP,kBAAC,EAAD,CAAgBe,IAAKf,EAAKgB,GAAIhB,KAAMA,S,YCRnCiB,EAAqBC,YAChC,CAHgB,SAAAC,GAAK,OAAIA,EAAMC,eAI/B,SAAAC,GAAI,OAAIA,EAAKC,eAGFC,EAAmBL,YAC9B,CAACD,IACD,SAAAK,GAAW,OAAIE,OAAOC,OAAOH,MCI/B,IAIezB,eAJS,SAAAsB,GAAK,MAAK,CAChCG,YAAaC,EAAiBJ,MAGjBtB,EAdf,YAA8C,IAAhByB,EAAe,EAAfA,YAC5B,OACE,6BACGA,EAAYR,KAAI,gBAAGE,EAAH,EAAGA,GAAOU,EAAV,6BACf,kBAACjB,EAAD,eAAmBM,IAAKC,GAAQU,W,cCWxC,IAIe7B,eAJS,SAACsB,EAAOQ,GAAR,MAAmB,CACzCC,kBFP8BC,EEOKF,EAAMG,MAAMD,OAAOE,aFNtDb,YACE,CAACD,IACD,SAAAK,GAAW,OAAIA,EAAYO,OEIuCV,IFPtC,IAAAU,IEUjBhC,EAlBf,YAA2C,IAArB+B,EAAoB,EAApBA,iBACZlB,EAAiBkB,EAAjBlB,MAAOC,EAAUiB,EAAVjB,MACf,OACE,yBAAKP,UAAU,mBACb,wBAAIA,UAAU,SAASM,GACvB,yBAAKN,UAAU,SACZO,EAAMG,KAAI,SAAAd,GAAI,OACb,kBAAC,EAAD,CAAgBe,IAAKf,EAAKgB,GAAIhB,KAAMA,Y,gBCuB/BH,uBAJD,SAAAsB,GAAK,MAAK,CACtBF,mBAAoBA,EAAmBE,OALd,SAAArB,GAAQ,MAAK,CACtCkC,sBAAuB,kBAAMlC,EAASkC,mBAOzBnC,EA3Bf,YAAyE,IAArDmC,EAAoD,EAApDA,sBAAuBF,EAA6B,EAA7BA,MAAOb,EAAsB,EAAtBA,mBAKhD,OAJAgB,qBAAU,WACRD,MACC,CAACA,IAGF,6BAC0B,KAAvBf,EACC,kBAACiB,EAAA,EAAD,MAEA,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKN,EAAMO,KAAOC,UAAWC,IAC9C,kBAAC,IAAD,CAAOH,KAAI,UAAKN,EAAMO,IAAX,kBAAgCC,UAAWE,U","file":"static/js/4.c274544c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\nimport Button from \"../button/button\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../../redux/cart/cartActions\";\r\n\r\nfunction CollectionItem({ item, addItem }) {\r\n  const { name, price, imageUrl } = item;\r\n  return (\r\n    <div className=\"collection-item\">\r\n      <div\r\n        className=\"image\"\r\n        style={{\r\n          backgroundImage: `url(${imageUrl})`\r\n        }}\r\n      />\r\n      <div className=\"collection-footer\">\r\n        <span>{name}</span>\r\n        <span>${price}</span>\r\n      </div>\r\n      <Button onClick={() => addItem(item)} inverted>\r\n        ADD TO CART\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n","import React from \"react\";\r\nimport CollectionItem from \"../collection item/CollectionItem\";\r\nimport \"./style.scss\";\r\n\r\nexport default function PreviewCollection({ title, items }) {\r\n  return (\r\n    <div className=\"collection-preview\">\r\n      <h1 className=\"title\">{title}</h1>\r\n      <div className=\"preview\">\r\n        {items\r\n          .filter((item, i) => i < 4)\r\n          .map(item => (\r\n            <CollectionItem key={item.id} item={item} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst shopState = state => state.shopReducer;\r\n\r\nexport const getShopCollections = createSelector(\r\n  [shopState],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const collectionValues = createSelector(\r\n  [getShopCollections],\r\n  collections => Object.values(collections)\r\n);\r\n\r\nexport const selectCollection = params =>\r\n  createSelector(\r\n    [getShopCollections],\r\n    collections => collections[params]\r\n  );\r\n","import React from \"react\";\r\nimport PreviewCollection from \"../preview collection/PreviewCollection\";\r\nimport { connect } from \"react-redux\";\r\nimport { collectionValues } from \"../../redux/shop/shopSelector\";\r\n\r\nfunction CollectionOverview({ collections }) {\r\n  return (\r\n    <div>\r\n      {collections.map(({ id, ...otherProps }) => (\r\n        <PreviewCollection key={id} {...otherProps} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  collections: collectionValues(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCollection } from \"../../redux/shop/shopSelector\";\r\nimport CollectionItem from \"../../components/collection item/CollectionItem\";\r\nimport \"./style.scss\";\r\n\r\nfunction Collection({ selectCollection }) {\r\n  const { title, items } = selectCollection;\r\n  return (\r\n    <div className=\"collection-page\">\r\n      <h2 className=\"title\">{title}</h2>\r\n      <div className=\"items\">\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  selectCollection: selectCollection(props.match.params.collectionid)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Collection);\r\n","import React, { useEffect } from \"react\";\r\nimport CollectionOverview from \"../../components/collection overview/CollectionOverview\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Collection from \"../collection/Collection\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shopActions\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\nimport { getShopCollections } from \"../../redux/shop/shopSelector\";\r\n\r\nfunction ShopPage({ fetchCollectionsStart, match, getShopCollections }) {\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div>\r\n      {getShopCollections === \"\" ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div>\r\n          <Route exact path={`${match.url}`} component={CollectionOverview} />\r\n          <Route path={`${match.url}/:collectionid`} component={Collection} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nconst state = state => ({\r\n  getShopCollections: getShopCollections(state)\r\n});\r\n\r\nexport default connect(state, mapDispatchToProps)(ShopPage);\r\n"],"sourceRoot":""}