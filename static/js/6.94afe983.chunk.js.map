{"version":3,"sources":["components/checkout item/CheckoutItem.js","components/stripe/stripeButton.js","pages/checkout/Checkout.js"],"names":["connect","dispatch","clearItem","item","addItem","removeItem","name","imageUrl","price","quantity","className","src","alt","onClick","stripeButton","totalPrice","stripePrice","token","axios","url","method","data","amount","then","res","alert","catch","error","description","stripeKey","billingAddress","shippingAddress","currency","mapStateToProps","createStructuredSelector","getItems","map","key","id"],"mappings":"gOA8BA,IAMeA,cACb,MAPyB,SAAAC,GAAQ,MAAK,CACtCC,UAAW,SAAAC,GAAI,OAAIF,EAASC,YAAUC,KACtCC,QAAS,SAAAD,GAAI,OAAIF,EAASG,YAAQD,KAClCE,WAAY,SAAAF,GAAI,OAAIF,EAASI,YAAWF,QAG3BH,EA/Bf,YAAiE,IAAzCG,EAAwC,EAAxCA,KAAMD,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACxCC,EAAoCH,EAApCG,KAAMC,EAA8BJ,EAA9BI,SAAUC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAC/B,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKC,IAAKJ,EAAUK,IAAI,UAE1B,0BAAMF,UAAU,QAAQJ,GACxB,0BAAMI,UAAU,YACd,yBAAKA,UAAU,QAAQG,QAAS,kBAAMR,EAAWF,KAAjD,UAGA,0BAAMO,UAAU,SAASD,GACzB,yBAAKC,UAAU,QAAQG,QAAS,kBAAMT,EAAQD,KAA9C,WAIF,0BAAMO,UAAU,SAAhB,IAA0BF,GAC1B,yBAAKE,UAAU,gBAAgBG,QAAS,kBAAMX,EAAUC,KAAxD,c,qDCnBS,SAASW,EAAT,GAAuC,IAAfC,EAAc,EAAdA,WAC/BC,EAA2B,IAAbD,EAgBpB,OACE,6BACE,kBAAC,IAAD,CACEE,MAlBc,SAAAA,GAClBC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJC,OAAQN,EACRC,WAGDM,MAAK,SAAAC,GAAG,OAAIC,MAAM,8BAClBC,OAAM,SAAAC,GACLF,MAAM,6CAQNnB,KAAK,QACLsB,YAAW,kBAAab,GACxBc,UAAU,6CACVC,gBAAc,EACdC,iBAAe,EACfT,OAAQN,EACRgB,SAAS,SCOjB,IAAMC,EAAkBC,YAAyB,CAC/CC,aACApB,iBAGaf,sBAAQiC,EAARjC,EAlCf,YAA6C,IAAzBmC,EAAwB,EAAxBA,SAAUpB,EAAc,EAAdA,WAC5B,OACE,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,gBACb,0CAEF,yBAAKA,UAAU,gBACb,8CAEF,yBAAKA,UAAU,gBACb,2CAEF,yBAAKA,UAAU,gBACb,wCAEF,yBAAKA,UAAU,gBACb,0CAGHyB,EAASC,KAAI,SAAAjC,GAAI,OAChB,kBAAC,EAAD,CAAckC,IAAKlC,EAAKmC,GAAInC,KAAMA,OAEpC,yBAAKO,UAAU,SAAf,WAAgCK,GAChC,kBAAC,EAAD,CAAcA,WAAYA","file":"static/js/6.94afe983.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearItem, addItem, removeItem } from \"../../redux/cart/cartActions\";\r\n\r\nfunction CheckoutItem({ item, clearItem, addItem, removeItem }) {\r\n  const { name, imageUrl, price, quantity } = item;\r\n  return (\r\n    <div className=\"checkout-item\">\r\n      <div className=\"image-container\">\r\n        <img src={imageUrl} alt=\"item\" />\r\n      </div>\r\n      <span className=\"name\">{name}</span>\r\n      <span className=\"quantity\">\r\n        <div className=\"arrow\" onClick={() => removeItem(item)}>\r\n          &#10094;\r\n        </div>\r\n        <span className=\"value\">{quantity}</span>\r\n        <div className=\"arrow\" onClick={() => addItem(item)}>\r\n          &#10095;\r\n        </div>\r\n      </span>\r\n      <span className=\"price\">${price}</span>\r\n      <div className=\"remove-button\" onClick={() => clearItem(item)}>\r\n        &#10005;\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearItem: item => dispatch(clearItem(item)),\r\n  addItem: item => dispatch(addItem(item)),\r\n  removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CheckoutItem);\r\n","import StripeCheckout from \"react-stripe-checkout\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function stripeButton({ totalPrice }) {\r\n  const stripePrice = totalPrice * 100;\r\n  const handleToken = token => {\r\n    axios({\r\n      url: \"payment\",\r\n      method: \"post\",\r\n      data: {\r\n        amount: stripePrice,\r\n        token\r\n      }\r\n    })\r\n      .then(res => alert(\"Payment was successful!\"))\r\n      .catch(error => {\r\n        alert(\"There was an issue with your payment.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <StripeCheckout\r\n        token={handleToken}\r\n        name=\"Crown\"\r\n        description={`Total: $${totalPrice}`}\r\n        stripeKey=\"pk_test_orFeQiHoizVs9ecOr3HVhmQk0072NJr84l\"\r\n        billingAddress\r\n        shippingAddress\r\n        amount={stripePrice}\r\n        currency=\"USD\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItems } from \"../../redux/cart/cartSelectors\";\r\nimport CheckoutItem from \"../../components/checkout item/CheckoutItem\";\r\nimport \"./style.scss\";\r\nimport { totalPrice } from \"../../redux/cart/cartSelectors\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport StripeButton from \"../../components/stripe/stripeButton\";\r\n\r\nfunction Checkout({ getItems, totalPrice }) {\r\n  return (\r\n    <div className=\"checkout-page\">\r\n      <div className=\"checkout-header\">\r\n        <div className=\"header-block\">\r\n          <span>Product</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Description</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Quantity</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Price</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n          <span>Remove</span>\r\n        </div>\r\n      </div>\r\n      {getItems.map(item => (\r\n        <CheckoutItem key={item.id} item={item} />\r\n      ))}\r\n      <div className=\"total\">TOTAL: ${totalPrice}</div>\r\n      <StripeButton totalPrice={totalPrice} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  getItems,\r\n  totalPrice\r\n});\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}